owner: mpobrien
repo: sample
branch: master
repokind: github
enabled: true
batchtime: 120
identifier: sample

functions:
  "fetch source" :
    - command: git.get_project
      params:
        directory: src
    - command: shell.exec
      params:
        working_dir: src
        script: |
          echo "this is a 2nd command in the function!"
          ls
  "debug":
    command: shell.exec
    params:
      script: |
        echo "i am a debug function."
  "run a task that fails" :
    command: shell.exec
    params:
      working_dir: src
      script: |
        echo "this is a function with only a single command to run!"
        ./run.py results fail

  "run a task that passes" :
    command: shell.exec
    params:
      working_dir: src
      script: |
        ./run.py results pass

  "run a function with an arg":
    command: shell.exec
    params:
      working_dir: src
      script: |
        echo "I was called with ${foobar}"

pre:
  command: shell.exec
  params:
    script: |
      rm -rf src || true
      echo "pre-task run. JUST ONE COMMAND"

post:
  - command: shell.exec
    params:
      script: |
        echo "post-task run."
        true
  - command: attach.results
    params:
      file_location: src/results.json

tasks:
- name: compile
  depends_on: []
  commands:
    - func: "fetch source"
    - func: "run a task that passes" 
    - func: "run a function with an arg"
      vars:
        foobar: "TESTING: ONE"
    - func: "run a function with an arg"
      vars:
        foobar: "TESTING: TWO"

- name: passing_test 
  depends_on: 
  - name: compile
  commands:
    - func: "fetch source"
    - func: "run a task that passes"

- name: failing_test 
  depends_on: 
  - name: compile
  commands:
    - func: "fetch source"
    - func: "run a task that fails"

- name: another_fails
  depends_on: 
  - name: compile
  commands:
    - func: "fetch source"
    - func: "run a task that fails"

- name: timeout_test
  depends_on: 
  - name: compile
  commands:
    - func: "fetch source"
    - command: shell.exec
      timeout_secs: 20
      params:
        working_dir: src
        script: |
           echo "this is going too timeout"          
           ./run.py timeout
- name: s3putAndGet
  depends_on:
  - name: compile
  command: 
- name: push
  commands:
  - command: s3.put 
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_file: testdata/test.tgz
      remote_file: ${push_path}/test.tgz
      bucket: ${push_source_bucket}
      permissions: public-read-write
      content_type: application/tar
      display_name: test_copy
  - command: s3Copy.copy
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      s3_copy_files:
      - source:
          bucket: ${push_source_bucket}
          path: ${push_path}/test.tgz
        destination:
          bucket: ${push_destination_bucket}
          path: ${push_path}/${push_name}/test.tgz
        display_name: test_copy
        build_variants:
        - linux-64


buildvariants:
  - name: osx-108
    display_name: OSX
    modules: ~
    run_on:
    - localtestdistro
    expansions:
      test_flags: "blah blah"
    tasks:
    - name: compile
    - name: passing_test
    - name: failing_test
    - name: timeout_test
    - name: another_fails
